{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport colors from \"../assets/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CustomButton = function CustomButton(_ref) {\n  var title = _ref.title,\n      secondary = _ref.secondary,\n      primary = _ref.primary,\n      danger = _ref.danger,\n      logout = _ref.logout,\n      disabled = _ref.disabled,\n      loading = _ref.loading,\n      onPress = _ref.onPress,\n      style = _ref.style;\n\n  var getBackgroundColor = function getBackgroundColor() {\n    if (disabled) {\n      return colors.grey;\n    }\n\n    if (primary) {\n      return colors.primary;\n    }\n\n    if (danger) {\n      return colors.danger;\n    }\n\n    if (secondary) {\n      return colors.secondary;\n    }\n\n    if (logout) {\n      return colors.grey;\n    }\n  };\n\n  return _jsx(TouchableOpacity, {\n    disabled: disabled,\n    onPress: onPress,\n    style: [{\n      backgroundColor: getBackgroundColor()\n    }, style],\n    children: _jsxs(View, {\n      style: [styles.loaderSection],\n      children: [loading && _jsx(ActivityIndicator, {\n        color: primary ? colors.secondary : colors.primary\n      }), title && _jsx(Text, {\n        style: {\n          color: disabled ? \"black\" : \"white\",\n          paddingLeft: loading ? 5 : 0,\n          fontSize: 35\n        },\n        children: loading ? \"Please wait...\" : title\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {},\n  loginBtn: {\n    height: 70,\n    paddingHorizontal: 5,\n    marginVertical: 60,\n    marginHorizontal: 55,\n    borderRadius: 15,\n    width: \"70%\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\"\n  },\n  logoutBtn: {\n    height: 70,\n    paddingHorizontal: 5,\n    marginVertical: 60,\n    marginHorizontal: 55,\n    borderRadius: 15,\n    width: \"70%\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\"\n  },\n  loaderSection: {\n    flexDirection: \"row\"\n  },\n  error: {\n    color: colors.danger,\n    paddingTop: 4,\n    fontSize: 12\n  }\n});\nexport default CustomButton;","map":{"version":3,"sources":["C:/Users/Nathan/UCF_Classes/Spring2022/COP4331/MobileWorkoutApp/COP4331-WorkoutApp/components/CustomButton.js"],"names":["React","TouchableOpacity","colors","CustomButton","title","secondary","primary","danger","logout","disabled","loading","onPress","style","getBackgroundColor","grey","backgroundColor","styles","loaderSection","color","paddingLeft","fontSize","StyleSheet","create","container","loginBtn","height","paddingHorizontal","marginVertical","marginHorizontal","borderRadius","width","alignItems","justifyContent","logoutBtn","flexDirection","error","paddingTop"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View, ActivityIndicator } from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport colors from \"../assets/colors\";\r\n\r\nconst CustomButton = ({\r\n  title,\r\n  secondary,\r\n  primary,\r\n  danger,\r\n  logout,\r\n  disabled,\r\n  loading,\r\n  onPress,\r\n  style,\r\n}) => {\r\n  const getBackgroundColor = () => {\r\n    if (disabled) {\r\n      return colors.grey;\r\n    }\r\n    if (primary) {\r\n      return colors.primary;\r\n    }\r\n    if (danger) {\r\n      return colors.danger;\r\n    }\r\n    if (secondary) {\r\n      return colors.secondary;\r\n    }\r\n    if (logout) {\r\n      return colors.grey;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      disabled={disabled}\r\n      onPress={onPress}\r\n      style={[{ backgroundColor: getBackgroundColor() }, style]}\r\n    >\r\n      <View style={[styles.loaderSection]}>\r\n        {loading && (\r\n          <ActivityIndicator\r\n            color={primary ? colors.secondary : colors.primary}\r\n          />\r\n        )}\r\n        {title && (\r\n          <Text\r\n            style={{\r\n              color: disabled ? \"black\" : \"white\",\r\n              paddingLeft: loading ? 5 : 0,\r\n              fontSize: 35,\r\n            }}\r\n          >\r\n            {loading ? \"Please wait...\" : title}\r\n          </Text>\r\n        )}\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n\r\n  loginBtn: {\r\n    height: 70,\r\n    paddingHorizontal: 5,\r\n    marginVertical: 60,\r\n    marginHorizontal: 55,\r\n    borderRadius: 15,\r\n    width: \"70%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n\r\n  logoutBtn: {\r\n    height: 70,\r\n    paddingHorizontal: 5,\r\n    marginVertical: 60,\r\n    marginHorizontal: 55,\r\n    borderRadius: 15,\r\n    width: \"70%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n\r\n  loaderSection: {\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  error: {\r\n    color: colors.danger,\r\n    paddingTop: 4,\r\n    fontSize: 12,\r\n  },\r\n});\r\n\r\nexport default CustomButton;\r\n"]},"metadata":{},"sourceType":"module"}