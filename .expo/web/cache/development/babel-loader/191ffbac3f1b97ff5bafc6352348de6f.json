{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useState } from \"react\";\nimport react from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport axios from \"axios\";\nimport CustomButton from \"../components/CustomButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var bp = require(\"../components/Path\");\n\n  var newFirstName, newLastName, newEmail, newPassword;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var attemptRegistration = function attemptRegistration(event) {\n    var obj, js, config;\n    return _regeneratorRuntime.async(function attemptRegistration$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            obj = {\n              firstName: newFirstName.value,\n              lastName: newLastName.value,\n              email: newEmail.value,\n              password: newPassword.value\n            };\n            js = JSON.stringify(obj);\n            config = {\n              method: \"POST\",\n              url: bp.buildPath(\"api/register\"),\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              data: js\n            };\n            axios(config).then(function (response) {\n              var res = response.data;\n\n              if (res.error) {\n                setMessage(\"Account already exists under given email\");\n              } else {\n                window.location.href = \"/verify-account\";\n              }\n            }).catch(function (error) {\n              console.log(error);\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      firstName = _useState8[0],\n      setFirst = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      lastName = _useState10[0],\n      setLast = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      email = _useState12[0],\n      setEmail = _useState12[1];\n\n  return _jsxs(View, {\n    style: styles.background,\n    children: [_jsx(View, {\n      style: styles.smallPadding\n    }), _jsx(Image, {\n      style: {\n        height: 200,\n        width: 200\n      },\n      source: require(\"../assets/logo.png\")\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"First Name\",\n      secureTextEntry: false,\n      onChangeText: function onChangeText(newFirst) {\n        return setFirst(newFirst);\n      },\n      defaultValue: firstName\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Last Name\",\n      secureTextEntry: false,\n      onChangeText: function onChangeText(newLast) {\n        return setLast(newLast);\n      },\n      defaultValue: lastName\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Username\",\n      secureTextEntry: false,\n      onChangeText: function onChangeText(newUsername) {\n        return setUsername(newUsername);\n      },\n      defaultValue: username\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      secureTextEntry: false,\n      onChangeText: function onChangeText(newEmail) {\n        return setEmail(newEmail);\n      },\n      defaultValue: email\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(newPassword) {\n        return setPassword(newPassword);\n      },\n      defaultValue: password\n    }), _jsx(View, {\n      style: {\n        marginHorizontal: 30\n      },\n      children: _jsx(CustomButton, {\n        primary: true,\n        title: \"Register Now\",\n        loading: false,\n        disabled: false,\n        onPress: function _callee() {\n          var registerCredentials, JSONifyCredentials, response;\n          return _regeneratorRuntime.async(function _callee$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  registerCredentials = {\n                    username: username,\n                    firstName: firstName,\n                    lastName: lastName,\n                    email: email,\n                    password: password,\n                    password2: password\n                  };\n                  JSONifyCredentials = JSON.stringify(registerCredentials);\n                  console.log(JSONifyCredentials);\n                  _context2.next = 6;\n                  return _regeneratorRuntime.awrap(fetch(\"https://shreddit-ucf.herokuapp.com/api/register\", {\n                    method: \"POST\",\n                    body: registerCredentials,\n                    headers: {\n                      \"Content-Type\": \"application/json\"\n                    }\n                  }));\n\n                case 6:\n                  response = _context2.sent;\n                  console.log(response);\n                  _context2.next = 13;\n                  break;\n\n                case 10:\n                  _context2.prev = 10;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  console.log(_context2.t0);\n\n                case 13:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, null, [[0, 10]], Promise);\n        },\n        style: styles.registerButton\n      })\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    resizeMode: \"contain\"\n  },\n  backSquare: {\n    position: \"absolute\",\n    bottom: \"7%\",\n    width: \"80%\",\n    height: \"7%\",\n    backgroundColor: \"red\",\n    justifyContent: \"center\"\n  },\n  colorTop: {\n    backgroundColor: \"#4FB5D3\",\n    width: \"100%\",\n    height: \"15%\",\n    borderRadius: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  input: {\n    height: \"5%\",\n    width: \"80%\",\n    margin: 12,\n    borderWidth: 1,\n    borderRadius: 10,\n    padding: 10\n  },\n  titleText: {\n    fontWeight: \"bold\",\n    color: \"white\",\n    fontSize: 30\n  },\n  smallPadding: {\n    padding: \"2%\"\n  },\n  registerButton: {\n    height: 60,\n    paddingHorizontal: 5,\n    marginVertical: 60,\n    right: 25,\n    marginHorizontal: 35,\n    borderRadius: 15,\n    width: \"90%\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\"\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"sources":["C:/Users/Nathan/UCF_Classes/Spring2022/COP4331/MobileWorkoutApp/COP4331-WorkoutApp/screens/RegisterScreen.js"],"names":["StatusBar","useState","react","NavigationContainer","createNativeStackNavigator","axios","CustomButton","RegisterScreen","navigation","bp","require","newFirstName","newLastName","newEmail","newPassword","message","setMessage","attemptRegistration","event","preventDefault","obj","firstName","value","lastName","email","password","js","JSON","stringify","config","method","url","buildPath","headers","data","then","response","res","error","window","location","href","catch","console","log","username","setUsername","setPassword","setFirst","setLast","setEmail","styles","background","smallPadding","height","width","input","newFirst","newLast","newUsername","marginHorizontal","registerCredentials","password2","JSONifyCredentials","fetch","body","registerButton","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","resizeMode","backSquare","position","bottom","colorTop","borderRadius","margin","borderWidth","padding","titleText","fontWeight","color","fontSize","paddingHorizontal","marginVertical","right"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { useState } from \"react\";\r\nimport react from \"react-native\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  ImageBackground,\r\n  Button,\r\n  TextInput,\r\n} from \"react-native\";\r\n\r\nimport {\r\n  Alert,\r\n  SafeAreaView,\r\n  TouchableWithoutFeedback,\r\n} from \"react-native-web\";\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n\r\nimport axios from \"axios\";\r\nimport CustomButton from \"../components/CustomButton\";\r\n\r\nfunction RegisterScreen({ navigation }) {\r\n  var bp = require(\"../components/Path\");\r\n  // var storage = require(\"../tokenStorage.js\");\r\n\r\n  var newFirstName, newLastName, newEmail, newPassword;\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const attemptRegistration = async (event) => {\r\n    event.preventDefault();\r\n\r\n    var obj = {\r\n      firstName: newFirstName.value,\r\n      lastName: newLastName.value,\r\n      email: newEmail.value,\r\n      password: newPassword.value,\r\n    };\r\n\r\n    var js = JSON.stringify(obj);\r\n\r\n    var config = {\r\n      method: \"POST\",\r\n      url: bp.buildPath(\"api/register\"),\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n\r\n      data: js,\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        var res = response.data;\r\n\r\n        if (res.error) {\r\n          setMessage(\"Account already exists under given email\");\r\n        } else {\r\n          // storage.storeToken(res);\r\n          // var jwt = require(\"jsonwebtoken\");\r\n\r\n          // var ud = jwt.decode(storage.retrieveToken(), {\r\n          //   complete: true\r\n          // });\r\n\r\n          // var userId = ud.payload.userId;\r\n          // var firstName = ud.payload.firstName;\r\n          // var lastName = ud.payload.lastName;\r\n\r\n          // var user = {\r\n          //   firstName: firstName,\r\n          //   lastName: lastName,\r\n          //   id: userId\r\n          // };\r\n\r\n          // localStorage.setItem(\"user_data\", JSON.stringify(user));\r\n\r\n          window.location.href = \"/verify-account\";\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [firstName, setFirst] = useState(\"\");\r\n  const [lastName, setLast] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  return (\r\n    // Main View\r\n    <View style={styles.background}>\r\n      {/* <View style = {styles.colorTop}>\r\n                <View style={styles.smallPadding}></View>\r\n                <Text style={styles.titleText}>Register</Text>\r\n            </View> */}\r\n      <View style={styles.smallPadding}></View>\r\n      <Image\r\n        style={{ height: 200, width: 200 }}\r\n        source={require(\"../assets/logo.png\")}\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"First Name\"\r\n        secureTextEntry={false}\r\n        onChangeText={(newFirst) => setFirst(newFirst)}\r\n        defaultValue={firstName}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Last Name\"\r\n        secureTextEntry={false}\r\n        onChangeText={(newLast) => setLast(newLast)}\r\n        defaultValue={lastName}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Username\"\r\n        secureTextEntry={false}\r\n        onChangeText={(newUsername) => setUsername(newUsername)}\r\n        defaultValue={username}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        secureTextEntry={false}\r\n        onChangeText={(newEmail) => setEmail(newEmail)}\r\n        defaultValue={email}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        secureTextEntry={true}\r\n        onChangeText={(newPassword) => setPassword(newPassword)}\r\n        defaultValue={password}\r\n      />\r\n\r\n      <View style={{ marginHorizontal: 30 }}>\r\n        <CustomButton\r\n          primary\r\n          title=\"Register Now\"\r\n          loading={false}\r\n          disabled={false}\r\n\r\n          //navigation.navigate(\"Login\")\r\n          onPress={async () => {\r\n            try {\r\n              const registerCredentials = {username: username, firstName: firstName, lastName: lastName, email: email, password: password, password2: password};\r\n              var JSONifyCredentials = JSON.stringify(registerCredentials);\r\n\r\n              console.log(JSONifyCredentials);\r\n              const response = await fetch(\"https://shreddit-ucf.herokuapp.com/api/register\", \r\n              {\r\n                method: \"POST\",\r\n                body: registerCredentials,\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n              });\r\n\r\n              console.log(response);\r\n            } catch(error) {\r\n              console.log(error);\r\n            }\r\n          }}\r\n          style={styles.registerButton}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    resizeMode: \"contain\",\r\n  },\r\n  backSquare: {\r\n    position: \"absolute\",\r\n    bottom: \"7%\",\r\n    width: \"80%\",\r\n    height: \"7%\",\r\n    backgroundColor: \"red\",\r\n    justifyContent: \"center\",\r\n  },\r\n  colorTop: {\r\n    backgroundColor: \"#4FB5D3\",\r\n    width: \"100%\",\r\n    height: \"15%\",\r\n    borderRadius: 20,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    height: \"5%\",\r\n    width: \"80%\",\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    padding: 10,\r\n  },\r\n  titleText: {\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    fontSize: 30,\r\n  },\r\n  smallPadding: {\r\n    padding: \"2%\",\r\n  },\r\n  registerButton: {\r\n    height: 60,\r\n    paddingHorizontal: 5,\r\n    marginVertical: 60,\r\n    right: 25,\r\n    marginHorizontal: 35,\r\n    borderRadius: 15,\r\n    width: \"90%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n});\r\n\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"module"}