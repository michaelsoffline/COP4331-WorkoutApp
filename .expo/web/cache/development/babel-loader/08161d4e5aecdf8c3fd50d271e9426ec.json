{"ast":null,"code":"import * as React from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { getFocusedRouteNameFromRoute } from \"@react-navigation/native\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport WorkoutsScreen from \"../screens/WorkoutsScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport WelcomeScreen from \"../screens/WelcomeScreen\";\nimport ProfileInfoScreen from \"../screens/ProfileInfoScreen\";\nimport PasswordResetScreen from \"../screens/PasswordResetScreen\";\nimport NotificationsScreen from \"../screens/NotificationsScreen\";\nimport DarkModeScreen from \"../screens/DarkModeScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar TabBar = function TabBar() {\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: \"HomeTab\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"HomeTab\") {\n            iconName = focused ? \"ios-home\" : \"ios-home-outline\";\n          } else if (route.name === \"Workouts\") {\n            iconName = focused ? \"ios-barbell\" : \"ios-barbell-outline\";\n          } else if (route.name === \"Settings\") {\n            iconName = focused ? \"ios-list-circle\" : \"ios-list\";\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"#4FB5D3\",\n        tabBarInactiveTintColor: \"gray\",\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Workouts\",\n      component: WorkoutsStackNavigator,\n      options: {\n        tabBarLabel: \"Workouts\",\n        tabBarActiveTintColor: \"#ACD1AF\"\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"HomeTab\",\n      component: HomeStackNavigator,\n      options: {\n        tabBarLabel: \"Home\"\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsStackNavigator,\n      options: {\n        tabBarLabel: \"Settings\",\n        tabBarActiveTintColor: \"#808080\"\n      }\n    })]\n  });\n};\n\nvar HomeStack = createNativeStackNavigator();\n\nvar HomeStackNavigator = function HomeStackNavigator() {\n  return _jsx(HomeStack.Navigator, {\n    screenOptions: {\n      title: \"Shreddit\",\n      headerStyle: {\n        backgroundColor: \"#4FB5D3\"\n      },\n      headerBackVisible: false,\n      headerTitleStyle: {\n        color: \"#fff\",\n        fontWeight: \"bold\",\n        fontSize: 30\n      }\n    },\n    children: _jsx(HomeStack.Screen, {\n      name: \"HomePage\",\n      component: HomeScreen\n    })\n  });\n};\n\nvar WorkoutsStack = createNativeStackNavigator();\n\nvar WorkoutsStackNavigator = function WorkoutsStackNavigator() {\n  return _jsx(WorkoutsStack.Navigator, {\n    screenOptions: {\n      title: \"My Workouts\",\n      headerStyle: {\n        backgroundColor: \"#ACD1AF\"\n      },\n      headerBackVisible: false,\n      headerTitleStyle: {\n        color: \"#fff\",\n        fontWeight: \"bold\",\n        fontSize: 30\n      }\n    },\n    children: _jsx(WorkoutsStack.Screen, {\n      name: \"WorkoutsPage\",\n      component: WorkoutsScreen\n    })\n  });\n};\n\nvar SettingsStack = createNativeStackNavigator();\n\nvar SettingsStackNavigator = function SettingsStackNavigator() {\n  return _jsxs(SettingsStack.Navigator, {\n    screenOptions: {\n      title: \"Settings\",\n      headerStyle: {\n        backgroundColor: \"#808080\"\n      },\n      headerBackVisible: false,\n      headerTitleStyle: {\n        color: \"#fff\",\n        fontWeight: \"bold\",\n        fontSize: 30\n      }\n    },\n    children: [_jsx(SettingsStack.Screen, {\n      name: \"SettingsPage\",\n      component: SettingsScreen\n    }), _jsx(SettingsStack.Screen, {\n      name: \"ProfileInfo\",\n      component: ProfileInfoScreen,\n      options: {\n        title: \"Profile Info\",\n        headerBackVisible: true,\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          color: \"#fff\",\n          fontSize: 20\n        }\n      }\n    }), _jsx(SettingsStack.Screen, {\n      name: \"PasswordReset\",\n      component: PasswordResetScreen,\n      options: {\n        title: \"Password Reset\",\n        headerBackVisible: true,\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          color: \"#fff\",\n          fontSize: 20\n        }\n      }\n    }), _jsx(SettingsStack.Screen, {\n      name: \"NotificationsPage\",\n      component: NotificationsScreen,\n      options: {\n        title: \"Notifications\",\n        headerBackVisible: true,\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          color: \"#fff\",\n          fontSize: 20\n        }\n      }\n    }), _jsx(SettingsStack.Screen, {\n      name: \"DarkMode\",\n      component: DarkModeScreen\n    })]\n  });\n};\n\nexport default TabBar;","map":{"version":3,"sources":["C:/Users/Nathan/UCF_Classes/Spring2022/COP4331/MobileWorkoutApp/COP4331-WorkoutApp/navigation/TabNavigator.js"],"names":["React","createNativeStackNavigator","createBottomTabNavigator","getFocusedRouteNameFromRoute","Ionicons","HomeScreen","WorkoutsScreen","SettingsScreen","WelcomeScreen","ProfileInfoScreen","PasswordResetScreen","NotificationsScreen","DarkModeScreen","Tab","TabBar","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","WorkoutsStackNavigator","tabBarLabel","HomeStackNavigator","SettingsStackNavigator","HomeStack","title","headerStyle","backgroundColor","headerBackVisible","headerTitleStyle","fontWeight","fontSize","WorkoutsStack","SettingsStack","headerTintColor"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { getFocusedRouteNameFromRoute } from \"@react-navigation/native\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\n\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\nimport WorkoutsScreen from \"../screens/WorkoutsScreen\";\r\nimport SettingsScreen from \"../screens/SettingsScreen\";\r\nimport WelcomeScreen from \"../screens/WelcomeScreen\";\r\n\r\nimport ProfileInfoScreen from \"../screens/ProfileInfoScreen\";\r\nimport PasswordResetScreen from \"../screens/PasswordResetScreen\";\r\nimport NotificationsScreen from \"../screens/NotificationsScreen\";\r\nimport DarkModeScreen from \"../screens/DarkModeScreen\";\r\n\r\n// function getHeaderTitle(route) {\r\n//   const routeName = getFocusedRouteNameFromRoute(route) ?? \"HomeTab\";\r\n\r\n//   switch (routeName) {\r\n//     case \"HomeTab\":\r\n//       return \"Shreddit\";\r\n//     case \"Workouts\":\r\n//       return \"My Workouts\";\r\n//     case \"Settings\":\r\n//       return \"Settings\";\r\n//   }\r\n// }\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst TabBar = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"HomeTab\"\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === \"HomeTab\") {\r\n            iconName = focused ? \"ios-home\" : \"ios-home-outline\";\r\n          } else if (route.name === \"Workouts\") {\r\n            iconName = focused ? \"ios-barbell\" : \"ios-barbell-outline\";\r\n          } else if (route.name === \"Settings\") {\r\n            iconName = focused ? \"ios-list-circle\" : \"ios-list\";\r\n          }\r\n\r\n          return <Ionicons name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: \"#4FB5D3\",\r\n        tabBarInactiveTintColor: \"gray\",\r\n        headerShown: false,\r\n      })}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Workouts\"\r\n        component={WorkoutsStackNavigator}\r\n        options={{ tabBarLabel: \"Workouts\", tabBarActiveTintColor: \"#ACD1AF\" }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"HomeTab\"\r\n        component={HomeStackNavigator}\r\n        options={{ tabBarLabel: \"Home\" }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Settings\"\r\n        component={SettingsStackNavigator}\r\n        options={{ tabBarLabel: \"Settings\", tabBarActiveTintColor: \"#808080\" }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst HomeStack = createNativeStackNavigator();\r\n\r\nconst HomeStackNavigator = () => {\r\n  return (\r\n    <HomeStack.Navigator\r\n      screenOptions={{\r\n        title: \"Shreddit\",\r\n        headerStyle: { backgroundColor: \"#4FB5D3\" },\r\n        headerBackVisible: false,\r\n        headerTitleStyle: {\r\n          color: \"#fff\",\r\n          fontWeight: \"bold\",\r\n          fontSize: 30,\r\n        },\r\n      }}\r\n    >\r\n      <HomeStack.Screen name=\"HomePage\" component={HomeScreen} />\r\n    </HomeStack.Navigator>\r\n  );\r\n};\r\n\r\nconst WorkoutsStack = createNativeStackNavigator();\r\n\r\nconst WorkoutsStackNavigator = () => {\r\n  return (\r\n    <WorkoutsStack.Navigator\r\n      screenOptions={{\r\n        title: \"My Workouts\",\r\n        headerStyle: { backgroundColor: \"#ACD1AF\" },\r\n        headerBackVisible: false,\r\n        headerTitleStyle: {\r\n          color: \"#fff\",\r\n          fontWeight: \"bold\",\r\n          fontSize: 30,\r\n        },\r\n      }}\r\n    >\r\n      <WorkoutsStack.Screen name=\"WorkoutsPage\" component={WorkoutsScreen} />\r\n    </WorkoutsStack.Navigator>\r\n  );\r\n};\r\n\r\nconst SettingsStack = createNativeStackNavigator();\r\n\r\nconst SettingsStackNavigator = () => {\r\n  return (\r\n    <SettingsStack.Navigator\r\n      screenOptions={{\r\n        title: \"Settings\",\r\n        headerStyle: { backgroundColor: \"#808080\" },\r\n        headerBackVisible: false,\r\n        headerTitleStyle: {\r\n          color: \"#fff\",\r\n          fontWeight: \"bold\",\r\n          fontSize: 30,\r\n        },\r\n      }}\r\n    >\r\n      <SettingsStack.Screen name=\"SettingsPage\" component={SettingsScreen} />\r\n      <SettingsStack.Screen\r\n        name=\"ProfileInfo\"\r\n        component={ProfileInfoScreen}\r\n        options={{\r\n          title: \"Profile Info\",\r\n          headerBackVisible: true,\r\n          headerTintColor: \"#fff\",\r\n          headerTitleStyle: {\r\n            color: \"#fff\",\r\n            fontSize: 20,\r\n          },\r\n        }}\r\n      />\r\n      <SettingsStack.Screen\r\n        name=\"PasswordReset\"\r\n        component={PasswordResetScreen}\r\n        options={{\r\n          title: \"Password Reset\",\r\n          headerBackVisible: true,\r\n          headerTintColor: \"#fff\",\r\n          headerTitleStyle: {\r\n            color: \"#fff\",\r\n            fontSize: 20,\r\n          },\r\n        }}\r\n      />\r\n      <SettingsStack.Screen\r\n        name=\"NotificationsPage\"\r\n        component={NotificationsScreen}\r\n        options={{\r\n          title: \"Notifications\",\r\n          headerBackVisible: true,\r\n          headerTintColor: \"#fff\",\r\n          headerTitleStyle: {\r\n            color: \"#fff\",\r\n            fontSize: 20,\r\n          },\r\n        }}\r\n      />\r\n      <SettingsStack.Screen name=\"DarkMode\" component={DarkModeScreen} />\r\n    </SettingsStack.Navigator>\r\n  );\r\n};\r\n\r\nexport default TabBar;\r\n"]},"metadata":{},"sourceType":"module"}